ul.user
  - if devise_mapping.omniauthable?
    li
      ul.oauth
        - resource_class.omniauth_providers.each do |provider|
          - if user_signed_in? && current_user.authorizations.pluck(:provider).include?(provider.to_s)
            li.connected
              span class="#{ provider.to_s }" title="#{ t('users.sessions.new.title_provider', provider: provider.to_s.titleize) }"
                = t('users.sessions.new.title_provider', provider: provider.to_s.titleize)
          - else
            li = link_to t('users.sessions.new.title_provider', provider: provider.to_s.titleize), omniauth_authorize_path(resource_name, provider), title: t('users.sessions.new.title_provider', provider: provider.to_s.titleize)


  - if devise_mapping.recoverable? && controller_name == 'sessions' && action_name == 'new'
    li = link_to t('users.passwords.new.title'), new_password_path(resource_name)

  - if devise_mapping.registerable? && controller_name != 'registrations'
    li = link_to t('users.registrations.new.title'), new_registration_path(resource_name)

  - if devise_mapping.confirmable? && controller_name != 'confirmations'
    li = link_to t('users.links.no_confirmation'), new_confirmation_path(resource_name)

  - if devise_mapping.lockable? && resource_class.unlock_strategy_enabled?(:email) && controller_name != 'unlocks'
    li = link_to t('users.links.no_unlock'), new_unlock_path(resource_name)

  - unless user_signed_in? || controller_name == 'sessions'
    li = link_to t('users.sessions.new.title'), new_session_path(resource_name)

  - if user_signed_in?
    li= link_to t('users.sessions.delete.title'), destroy_user_session_path
    li= link_to t('users.registrations.edit.cancel'), registration_path(resource_name), data: { confirm: t('users.registrations.edit.cancel_confirm'), method: :delete }
